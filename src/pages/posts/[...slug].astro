---
import { type CollectionEntry, getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import MainLayout from '../../layouts/MainLayout.astro';
import Toc from '../../components/post/Toc.astro';
import PostInfoCard from '../../components/post/PostInfoCard.astro';
import PostHeader from '@/components/post/PostHeader.astro';
import { render } from 'astro:content';
import Markdown from '@/components/util/Markdown.astro';
import { siteConfig } from '@/config';
import ScrollToTop from '@/components/util/ScrollToTop.astro';
import ScrollToComment from '@/components/util/ScrollToComment.astro';
import Artalk from '@/components/util/Artalk.astro';
import PhotoSwipeLightbox from '@/components/util/PhotoSwipeLightbox.astro';

export const prerender = true; // <--- 添加此行

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts.map(entry => ({
    params: { slug: entry.id },
    props: { entry },
  }));
}

const { entry, } = Astro.props;
const { Content, headings, remarkPluginFrontmatter } = await render(entry);
const fullPostUrl = Astro.url.href;
---
<MainLayout 
    title={entry.data.title} 
    description={entry.data.description}
    
    >
  {/* 容器保持居中 */}
  <div class="w-full flex justify-center px-4 py-8">
    <div class="w-full max-w-7xl flex flex-col lg:flex-row gap-x-12 gap-y-8" style={`--toc-width: ${siteConfig.tocWidth}`}>
      {/* 文章区域 */}
      <article class="min-w-0 flex-1">
        {entry.data.cover && (
          <div class="hero-image mb-8" transition:name={`hero-${entry.data.slug}`}>
            <Image 
              width={1020} 
              height={510} 
              src={entry.data.cover} 
              alt={entry.data.title}
              class="w-full h-auto rounded-lg shadow-lg"
            />
          </div>
        )}
        
        <PostHeader post={entry} transition:name={`title-${entry.data.slug}`} />
      
        <Markdown>
          <Content />
        </Markdown>
        <PhotoSwipeLightbox gallerySelector=".prose" childrenSelector=".pswp-link" />
        <script type="module">
          document.addEventListener('astro:page-load', () => {
            const container = document.querySelector('.prose');
            if (!container) return;
            const imgs = Array.from(container.querySelectorAll('img'));
            imgs.forEach((img) => {
              const src = img.currentSrc || img.src || img.getAttribute('src');
              if (!src) return;

              // 若尚未被包裹为锚点，则创建并包裹
              let anchor = img.closest('a.pswp-link');
              if (!anchor) {
                anchor = document.createElement('a');
                anchor.className = 'pswp-link';
                anchor.href = src;
                img.parentNode?.insertBefore(anchor, img);
                anchor.appendChild(img);
              } else {
                // 已存在则更新 href（处理 srcset/currentSrc）
                anchor.href = src;
              }

              const applySize = (w, h) => {
                if (w > 0 && h > 0) {
                  anchor.setAttribute('data-pswp-width', String(w));
                  anchor.setAttribute('data-pswp-height', String(h));
                }
              };

              // 已加载的图片可直接写尺寸
              if (img.complete && img.naturalWidth > 0) {
                applySize(img.naturalWidth, img.naturalHeight);
              } else {
                // 监听图片加载后补齐尺寸
                img.addEventListener('load', () => {
                  const realSrc = img.currentSrc || src;
                  anchor.href = realSrc;
                  applySize(img.naturalWidth, img.naturalHeight);
                }, { once: true });

                // 离屏探测，尽快拿到原始尺寸（适合懒加载或外链延迟）
                const probe = new Image();
                probe.onload = () => applySize(probe.naturalWidth, probe.naturalHeight);
                probe.onerror = () => {
                  // 兜底尺寸，避免空白（可按需调整为更贴近你图片的常见分辨率）
                  if (!anchor.hasAttribute('data-pswp-width')) {
                    applySize(img.width || 1600, img.height || 900);
                  }
                };
                probe.src = src;
              }
            });
          });
        </script>
      </article>
      
      {/* 目录区域 */}
      <aside class="hidden lg:block w-60 flex-shrink-0">
        <div class="sticky top-20 flex flex-col" style="height: calc(100vh - 20rem);">
          <div class="overflow-y-auto pr-4">
            <Toc items={headings} />
          </div>
          <div class="mt-auto flex-shrink-0 flex flex-col items-center gap-3 py-4">
            <ScrollToTop />
            <ScrollToComment />
          </div>
        </div>
      </aside>
    </div>
  </div>
  <PostInfoCard postUrl={fullPostUrl} />
  <div id="comment-section">
    <Artalk />
  </div>
</MainLayout>

<style>
  .flex-row {
    align-items: flex-start;
    overflow: visible !important;
  }
</style>
