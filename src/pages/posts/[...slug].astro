---
import { type CollectionEntry, getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import MainLayout from '../../layouts/MainLayout.astro';
import Toc from '../../components/post/Toc.astro';
import { render } from 'astro:content';
import Markdown from '@/components/util/Markdown.astro'; // 1. 导入 Markdown 组件
import { formatDateToYYYYMMDD } from '@/utils/date-utils';

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  return posts.map(entry => ({
    params: { slug: entry.id },
    props: { entry },
  }));
}



const { entry } = Astro.props;
const { Content, headings,remarkPluginFrontmatter } = await render(entry);

---
<MainLayout 
    title={entry.data.title} 
    description={entry.data.description}>
  {/* 容器保持居中 */}
  <div class="w-full flex justify-center px-4 py-8">
    <div class="flex flex-row gap-12">
      {/* 修正：增大文章区域的最大宽度 */}
      <article class="w-full max-w-5xl">
        {entry.data.cover && (
          <div class="hero-image mb-8">
            <Image 
            width={1020} 
            height={510} 
            src={entry.data.cover} 
            alt={entry.data.title}
            class="w-full h-auto rounded-lg shadow-lg"
          />
        </div>
        )}
        
        <header class="mb-8">
        <h1 class="text-4xl font-bold mb-4">{entry.data.title}</h1>
        <div class="text-gray-600 dark:text-gray-400 mb-4 flex flex-wrap items-center gap-x-4 text-sm">
          <span>
            发布于: {formatDateToYYYYMMDD(entry.data.date)}
          </span>
          {entry.data.updated && (
            <span>
              最后更新: {formatDateToYYYYMMDD(entry.data.updated)}
            </span>
          )}
          <div class="flex items-center gap-x-1">
            <iconify-icon icon="material-symbols:menu-book-outline" />
            <span>{remarkPluginFrontmatter.words} 字</span>
          </div>
          <div class="flex items-center gap-x-1">
            <iconify-icon icon="material-symbols:alarm-outline" />
            <span>{remarkPluginFrontmatter.minutesRead} 分钟</span>
          </div>
        </div>
        
        <div class="flex flex-wrap gap-2 mb-4">
          {entry.data.categories && entry.data.categories.map(category => (
            <span class="bg-blue-100 text-blue-800 text-sm px-3 py-1 rounded-full">
              {category}
            </span>
          ))}
          {entry.data.tags && entry.data.tags.map(tag => (
            <span class="bg-gray-100 text-gray-800 text-sm px-3 py-1 rounded-full">
              #{tag}
            </span>
          ))}
        </div>
        
        {entry.data.pinned && (
          <div class="bg-yellow-100 text-yellow-800 text-sm px-3 py-1 rounded-full inline-block mb-4">
            📌 置顶文章
          </div>
        )}
      </header>
      
      <Markdown>
        <Content />
      </Markdown>
    </article>
    <Toc headings={headings} />
    </div>
  </div>
</MainLayout>

<style>
  /* 固定Toc */
  .flex-row {
    align-items: flex-start;
    overflow: visible !important;
  }
</style>