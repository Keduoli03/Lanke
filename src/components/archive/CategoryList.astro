---
import { getAllCategories } from '../../utils/content-utils';
import { Icon } from 'astro-icon/components';

interface Props {
  class?: string;
  defaultExpanded?: boolean;
}

const { class: className, defaultExpanded = false } = Astro.props;
const categories = await getAllCategories();
---

<div class:list={["category-list-container", className]} data-expanded={defaultExpanded}>
  <div class="widget-header">
    <div class="widget-header-left">
      <Icon name="material-symbols:folder-open-outline" class="w-5 h-5" />
      <h3 class="widget-title">分类</h3>
    </div>
    <div class="widget-header-right">
      <span class="widget-count">{categories.length}</span>
      <button class="toggle-btn" type="button" data-expanded={defaultExpanded}>
        <Icon name="material-symbols:expand-more" class="w-5 h-5 toggle-icon" />
      </button>
    </div>
  </div>
  
  <div class="category-list" data-expanded={defaultExpanded}>
    {categories.map(category => (
      <a 
        href={`/categories/${encodeURIComponent(category.name)}/`}
        class="category-item"
        title={`${category.name} (${category.count} 篇文章)`}
      >
        <Icon name="material-symbols:folder-outline" class="category-icon" />
        <span class="category-name">{category.name}</span>
        <span class="category-count">{category.count}</span>
      </a>
    ))}
  </div>
</div>

<script>
  function initializeCategoryWidget() {
    document.querySelectorAll('.category-list-container').forEach(container => {
      const toggleBtn = container.querySelector('.toggle-btn');
      const content = container.querySelector('.category-list');
      
      if (!toggleBtn || !content) return;

      const existingHandler = (toggleBtn as any)._toggleHandler;
      if (existingHandler) {
        toggleBtn.removeEventListener('click', existingHandler);
      }

      const clickHandler = () => {
        const isExpanded = toggleBtn.getAttribute('data-expanded') === 'true';
        const newExpanded = !isExpanded;

        container.setAttribute('data-expanded', String(newExpanded));
        toggleBtn.setAttribute('data-expanded', String(newExpanded));
        content.setAttribute('data-expanded', String(newExpanded));
      };

      (toggleBtn as any)._toggleHandler = clickHandler;
      toggleBtn.addEventListener('click', clickHandler);
    });
  }
  document.addEventListener('astro:page-load', initializeCategoryWidget);
</script>

<style>
  .category-list-container { 
    background: var(--content-pane-bg); 
    border-radius: 0.75rem; 
    padding: 1.5rem; 
    box-shadow: 0 2px 8px 0 rgb(0 0 0 / 0.1); 
    border: 1px solid var(--border-color); 
    transition: all 0.3s ease; 
    max-width: 100%; 
  } 
  
  .widget-header { 
    display: flex; 
    align-items: center; 
    justify-content: space-between;
    gap: 0.5rem; 
    margin-bottom: 1rem; 
    padding-bottom: 0.75rem; 
    border-bottom: 1px solid var(--border-color); 
    transition: margin-bottom 0.3s ease; 
  } 

  .widget-header-left, 
  .widget-header-right { 
    display: flex; 
    align-items: center; 
    gap: 0.5rem; 
  } 

  /* 当列表折叠时，移除标题的下外边距以减小高度 */ 
  .category-list-container[data-expanded="false"] .widget-header { 
    margin-bottom: 0; 
    border-bottom-color: transparent; /* 折叠时也隐藏边框 */
  } 
  
  .widget-title { 
    font-size: 1.125rem; 
    font-weight: 600; 
    color: var(--text-primary); 
    margin: 0; 
  } 
  
  .widget-count { 
    background: var(--tag-bg); 
    color: var(--text-secondary);
    font-size: 0.75rem; 
    padding: 0.25rem 0.6rem;
    border-radius: 9999px; 
    font-weight: 600; 
    transition: all 0.3s ease; 
  } 
  
  .toggle-btn { 
    background: transparent; 
    border: none; 
    color: var(--text-secondary); 
    cursor: pointer; 
    padding: 0.5rem;
    border-radius: 0.5rem;
    transition: all 0.2s ease; 
    display: flex; 
    align-items: center; 
    justify-content: center; 
  } 
  
  .toggle-btn:hover { 
    color: var(--theme-color); 
    background: var(--sidebar-icon-bg);
    box-shadow: 0 0 12px 0 color-mix(in srgb, var(--theme-color) 40%, transparent);
  } 

  .toggle-icon {
    transition: transform 0.3s ease;
  }

  .toggle-btn[data-expanded="true"] .toggle-icon {
    transform: rotate(180deg);
  }
  
  .category-list { 
    display: grid; 
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); 
    gap: 0.75rem; 
    overflow: hidden; 
    transition: max-height 0.4s ease, opacity 0.3s ease, padding-top 0.3s ease; 
    max-height: 0; 
    opacity: 0;
    padding-top: 0;
  } 
  
  .category-list[data-expanded="true"] { 
    max-height: 1000px; /* 足够大的高度 */
    opacity: 1; 
    padding-top: 1rem;
  } 
  
  .category-item { 
    display: flex; 
    align-items: center; 
    gap: 0.75rem; 
    padding: 0.875rem 1rem; 
    border-radius: 0.5rem; 
    transition: all 0.2s ease; 
    color: var(--text-secondary); 
    text-decoration: none; 
    border: 1px solid var(--line-divider); 
    background: var(--content-pane-bg);
    position: relative; 
    overflow: hidden; 
  } 
  
  .category-item::before { 
    content: ''; 
    position: absolute; 
    left: 0; 
    top: 0; 
    bottom: 0; 
    width: 3px; 
    background: var(--theme-color); 
    transform: scaleY(0); 
    transition: transform 0.2s ease; 
  } 
  
  .category-item:hover { 
    background: var(--sidebar-icon-bg); 
    color: var(--text-primary); 
    border-color: var(--theme-color); 
    transform: translateY(-2px); 
    box-shadow: 0 4px 12px 0 rgb(0 0 0 / 0.08); 
  } 
  
  .category-item:hover::before { 
    transform: scaleY(1); 
  } 
  
  .category-icon { 
    width: 1.125rem; 
    height: 1.125rem; 
    flex-shrink: 0; 
    color: var(--theme-color); 
    transition: transform 0.2s ease; 
  } 
  
  .category-item:hover .category-icon { 
    transform: scale(1.1); 
  } 
  
  .category-name { 
    flex: 1; 
    font-size: 0.875rem; 
    font-weight: 500; 
    overflow: hidden; 
    text-overflow: ellipsis; 
    white-space: nowrap; 
    max-width: 120px; 
  } 
  
  .category-count { 
    background: var(--tag-bg); 
    color: var(--text-secondary); 
    font-size: 0.75rem; 
    padding: 0.25rem 0.5rem; 
    border-radius: 9999px; 
    font-weight: 600; 
    min-width: 1.75rem; 
    text-align: center; 
    transition: all 0.2s ease; 
    border: 1px solid transparent; 
  } 
  
  .category-item:hover .category-count { 
    background: var(--theme-color); 
    color: var(--text-on-theme, white); 
    transform: scale(1.05); 
  } 
  
  @media (max-width: 768px) { 
    .category-list { 
      grid-template-columns: 1fr; 
    } 
  } 
  
  html.dark .category-list-container {
    box-shadow: none;
  }

  html.dark .category-item:hover { 
    box-shadow: none;
  }
</style>